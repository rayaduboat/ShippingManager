@model FinanceManager.Model.Models.TripEditModel

@{
    ViewData["Title"] = "Index";
}

@*<h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>*@
<p>
    <a class="btn btn-primary" asp-action="MainTripsPanel">Main Trips Window</a>
</p>
@*<form method="post" asp-action="SenderRecipients" asp-controller="Recipients">*@
<div class="form-group row">
    <label class="col-form-label col-sm-2">Search Item</label>
    <div class="col-sm-4">
        <input type="text" id="SearchItem" class="form-control" value="" placeholder="enter search text" />@*asp-action="SenderRecipients" asp-controller="Recipients" asp-route="@Model.RecipientSender" asp-route-sender="@Model.RecipientSender"    *@
    </div>
        @*<div class="col-md-2">
            <button class="btn-primary m-1" type="button" id="btnItem" style="width:100%">Charge</button>
        </div>*@
        @*<div class="col-md-2">
            <button class="btn-primary m-1" type="button" id="btnClearTable" style="width:100%">Add Another Item</button>
        </div>*@
</div>
@*</form>*@
<div class="table-responsive">
    <table id="mainTable" class="table w3-table" border="1">
        <thead style="background-color:steelblue;text-align:center;color:white">
            <tr>
                @*<th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ActualRef)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.Comment)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.Total)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.GrandTotal)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.OrderDate)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.Batch)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.Item)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Sender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Recipient)
                </th>
                <th style="text-align:center">Action</th>
            </tr>
        </thead>
        <tbody id="itemTableBody">
            @if (Model != null)
            {
                @foreach (var item in Model.AllTrips)
                {

                    <tr style="text-align:center;font-size:12px;background-color:snow">
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualRef)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Comment)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Total)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.GrandTotal)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Batch.ActualBatch)
                        </td>*@
                        @*<td>
                            @Html.DisplayFor(modelItem => item.Item.ItemId)
                        </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Sender.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Recipient.FirstName)
                        </td>
                        <td style="text-align:center">
                            <input type="hidden" name="SenderId" value="@item.SenderId" />
                            <input type="hidden" name="RecipientId" value="@item.RecipientId" />
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.TripId">Edit</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.TripId">Delete</a>
                        </td>
                    </tr>
                }
            }

        </tbody>
    </table>
</div>



<div>
    @section Scripts {
        <script type="text/javascript">
            $(document).ready(function () {
                 $("#SearchItem").on("keyup", function() {
                    var value = $(this).val().toLowerCase();
                    $("#itemTableBody tr").filter(function() {
                      $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                    });
                  });
                function getNameById(senderID) {
                    var mydata = { 'data': '"' + senderID + '"' };
                    $.ajax({
                        type: 'Get',
                        url: '@Url.Action("GetDescription","Expenditures")',
                        data: mydata,// ActualData,
                        dataType: 'JSON',
                        contentType: "application/json; charset=utf-8",
                        success: function (results) {
                            var ExpenseDescriptions = [];
                            ExpenseDescriptions = results;
                            $("#expDescription option").remove();
                            for (var i = 0; i < results.length; i++) {
                                $('#expDescription').append('<option>' + ExpenseDescriptions[i].text + '</option>');
                            }
                        }
                    });
                }

                //function SearchItem() {
                //    $("#SearchItem").on("keyup", function() {
                //    var value = $(this).val().toLowerCase();
                //    $("#itemTableBody tr").filter(function() {
                //      $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                //    });
                //  });
                //}
            });
        </script>
    }

</div>